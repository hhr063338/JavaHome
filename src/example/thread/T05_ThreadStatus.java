package example.thread;

/**
 * <ul>
 * <li>文件名称: T05_ThreadStatus.java</li>
 * <li>文件描述: 线程的状态</li>
 * </ul>
 */
public class T05_ThreadStatus {

	/***线程的状态
	 * 1.创建状态：在程序中用构造方法创建了一个线程对象后，新的线程对象便处于新建状态，此时，它已经有了相应
	 *   的内存空间和其他资源，但还处于不可运行的状态
	 * 2.就绪状态：新建线程对象后，调用该线程的start()方法就可以启动线程。当线程启动时，线程进入就绪状态。
	 * 	 	     此时，线程将进入线程队列排队，等待Cpu服务，这表明它已经具备了运行的条件
	 * 3.运行状态：当就绪状态的线程被调用并获得处理器资源时，线程就进入运行的状态。此时，自动调用该线程的
	 *           run()方法
	 * 4.堵塞状态：一个正在执行的线程在某些特殊情况下，如被人为挂起或需要执行耗时的输入/输出操作时，将让出CPU
	 *           并暂时中止自己的执行，进入堵塞状态。在可执行的状态下，如果调用sleep()、suspend()、wait()
	 *           等方法，线程将进入堵塞状态。堵塞时，线程不能进入排队队列，只有当引起堵塞的原因被消除后，
	 *           线程才可以转入就绪状态
	 * 5.死亡状态：线程调用stop()方法或run()方法执行结束后，即处于死亡状态的线程不具有继续运行的能力
	 */
}
